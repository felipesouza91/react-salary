{"version":3,"sources":["helper/salary.js","helper/format-helper.js","component/InputFullSalary/index.js","component/InputReadOnly/index.js","component/ProgressBarSalary/index.js","App.js","index.js"],"names":["INSS_TABLE","id","minValue","maxValue","difference","discountPercentage","discountValue","round","value","toFixed","calculateSalaryFrom","fullSalary","baseINSS","discountINSS","i","length","currentItem","calculateDiscountINSS","baseIRPF","discountIRPF","calculateDiscountIRPF","netSalary","formatter","Intl","NumberFormat","style","currency","formatNumber","format","formatNumberPercent","maximumFractionDigits","InputFullSalary","handleClick","event","props","onSalaryInput","target","this","labelText","className","htmlFor","placeholder","type","onChange","defaultValue","Component","InputReadOnly","color","width","margin","fontWeight","ProgressBarSalary","marginTop","height","backgroundColor","App","handleSalaryInput","setState","calculatePercernt","percentINSS","percentIPRF","percentNetSalary","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11847f81.chunk.js","sourcesContent":["// Fonte: https://www.todacarreira.com/calculo-salario-liquido/\r\n\r\nconst INSS_TABLE = [\r\n  {\r\n    id: 1,\r\n    minValue: 0,\r\n    maxValue: 1045,\r\n    difference: 1045 - 0,\r\n    discountPercentage: 0.075,\r\n    discountValue: -1,\r\n  },\r\n  {\r\n    id: 2,\r\n    minValue: 1045.01,\r\n    maxValue: 2089.6,\r\n    difference: 2089.6 - 1045,\r\n    discountPercentage: 0.09,\r\n  },\r\n  {\r\n    id: 3,\r\n    minValue: 2089.61,\r\n    maxValue: 3134.4,\r\n    difference: 3134.4 - 2089.6,\r\n    discountPercentage: 0.12,\r\n  },\r\n  {\r\n    id: 4,\r\n    minValue: 3134.41,\r\n    maxValue: 6101.06,\r\n    difference: 6101.06 - 3134.4,\r\n    discountPercentage: 0.14,\r\n  },\r\n];\r\n\r\nfunction round(value) {\r\n  return +value.toFixed(2);\r\n}\r\n\r\nfunction calculateDiscountINSS(baseINSS) {\r\n  let discountINSS = 0;\r\n\r\n  if (baseINSS > 6101.07) {\r\n    return 713.1;\r\n  }\r\n\r\n  for (var i = 0; i < INSS_TABLE.length; i++) {\r\n    var currentItem = INSS_TABLE[i];\r\n    let discountValue = 0;\r\n\r\n    if (baseINSS > currentItem.maxValue) {\r\n      // prettier-ignore\r\n      discountValue = \r\n        round(currentItem.difference * currentItem.discountPercentage);\r\n\r\n      discountINSS += discountValue;\r\n    } else {\r\n      // prettier-ignore\r\n      discountValue = \r\n        round((baseINSS - currentItem.minValue) * currentItem.discountPercentage);\r\n\r\n      discountINSS += discountValue;\r\n      break;\r\n    }\r\n  }\r\n\r\n  discountINSS = round(discountINSS);\r\n\r\n  return discountINSS;\r\n}\r\n\r\nfunction calculateDiscountIRPF(baseIRPF) {\r\n  let discountIRPF =\r\n    baseIRPF < 1903.98\r\n      ? 0\r\n      : baseIRPF < 2826.65\r\n      ? round(baseIRPF * 0.075) - 142.8\r\n      : baseIRPF < 3751.05\r\n      ? round(baseIRPF * 0.15) - 354.8\r\n      : baseIRPF < 4664.68\r\n      ? round(baseIRPF * 0.225) - 636.13\r\n      : round(baseIRPF * 0.275) - 869.36;\r\n\r\n  discountIRPF = round(discountIRPF);\r\n\r\n  return discountIRPF;\r\n}\r\n\r\nfunction calculateSalaryFrom(fullSalary) {\r\n  const baseINSS = fullSalary;\r\n  const discountINSS = calculateDiscountINSS(baseINSS);\r\n\r\n  const baseIRPF = baseINSS - discountINSS;\r\n  const discountIRPF = calculateDiscountIRPF(baseIRPF);\r\n\r\n  const netSalary = baseINSS - discountINSS - discountIRPF;\r\n\r\n  return {\r\n    baseINSS,\r\n    discountINSS,\r\n    baseIRPF,\r\n    discountIRPF,\r\n    netSalary,\r\n  };\r\n}\r\n\r\nexport { calculateSalaryFrom };\r\n","const formatter = Intl.NumberFormat('pt-BR', {\n  style: 'currency',\n  currency: 'BRL',\n});\n\nfunction formatNumber(value) {\n  return formatter.format(value);\n}\n\nfunction formatNumberPercent(value) {\n  return Intl.NumberFormat('pt-BR', {\n    style: 'percent',\n    maximumFractionDigits: 2,\n  }).format(value / 100);\n}\n\nexport { formatNumber, formatNumberPercent };\n","import React, { Component } from 'react';\n\nexport default class InputFullSalary extends Component {\n  handleClick = (event) => {\n    this.props.onSalaryInput(event.target.value);\n  };\n\n  render() {\n    const { labelText, value = 0 } = this.props;\n    return (\n      <div className=\"input-field\">\n        <label htmlFor=\"full-salary\">{labelText}</label>\n        <input\n          placeholder=\"Digite seu salario\"\n          type=\"number\"\n          id=\"full-salary\"\n          onChange={this.handleClick}\n          defaultValue={value}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class InputReadOnly extends Component {\n  render() {\n    const { labelText, value = 0, color } = this.props;\n    return (\n      <div className=\"input-field\" style={{ width: '100%', margin: '5px' }}>\n        <label>{labelText}</label>\n        <input\n          style={{ color, fontWeight: 'bold' }}\n          placeholder=\"Digite seu salario\"\n          type=\"text\"\n          value={value}\n          onChange={() => {}}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\n// import { Container } from './styles';\n\nexport default class ProgressBarSalary extends Component {\n  render() {\n    const { value, color = 'black' } = this.props;\n\n    return (\n      <div\n        style={{\n          marginTop: '40px',\n          width: value + '%',\n          height: '20px',\n          backgroundColor: color,\n        }}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize.min.js';\n\nimport './App.css';\nimport { calculateSalaryFrom } from './helper/salary';\nimport { formatNumber, formatNumberPercent } from './helper/format-helper';\nimport InputFullSalary from './component/InputFullSalary';\nimport InputReadOnly from './component/InputReadOnly';\nimport ProgressBarSalary from './component/ProgressBarSalary';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fullSalary: null,\n    };\n  }\n\n  handleSalaryInput = (fullSalary) => {\n    this.setState({\n      fullSalary,\n    });\n  };\n\n  calculatePercernt = (fullSalary, discountINSS, discountIRPF, netSalary) => {\n    if (fullSalary === null) {\n      return { percentINSS: 0, percentIPRF: 0, percentNetSalary: 0 };\n    }\n    const percentINSS = (discountINSS / fullSalary) * 100;\n    const percentIPRF = (discountIRPF / fullSalary) * 100;\n    const percentNetSalary = (netSalary / fullSalary) * 100;\n    return { percentINSS, percentIPRF, percentNetSalary };\n  };\n\n  render() {\n    const { fullSalary } = this.state;\n    const {\n      baseINSS,\n      baseIRPF,\n      discountINSS,\n      discountIRPF,\n      netSalary,\n    } = calculateSalaryFrom(fullSalary);\n    const {\n      percentINSS,\n      percentIPRF,\n      percentNetSalary,\n    } = this.calculatePercernt(\n      fullSalary,\n      discountINSS,\n      discountIRPF,\n      netSalary\n    );\n    return (\n      <div className=\"container\">\n        <h1>React Salário</h1>\n        <div className=\"row\">\n          <div className=\"input-salary\">\n            <InputFullSalary\n              labelText=\"Salário Bruto\"\n              onSalaryInput={this.handleSalaryInput}\n              value={fullSalary}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"results-inputs\">\n            <InputReadOnly\n              labelText=\"Base INSS\"\n              value={`${formatNumber(baseINSS)}`}\n            />\n            <InputReadOnly\n              labelText=\"Desconto INSS\"\n              value={`${formatNumber(discountINSS)} (${formatNumberPercent(\n                percentINSS\n              )})`}\n              color=\"#e67e22\"\n            />\n            <InputReadOnly\n              labelText=\"Base IRPF\"\n              value={`${formatNumber(baseIRPF)}`}\n            />\n            <InputReadOnly\n              labelText=\"Desconto IRPF\"\n              value={`${formatNumber(discountIRPF)} (${formatNumberPercent(\n                percentIPRF\n              )})`}\n              color=\"#c0392b\"\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div style={{ width: '350px' }}>\n            <InputReadOnly\n              labelText=\"Salario Liquido\"\n              value={`${formatNumber(netSalary)} (${formatNumberPercent(\n                percentNetSalary\n              )})`}\n              color=\"#16a085\"\n            />\n          </div>\n        </div>\n        <div className=\"row bar-container\">\n          <ProgressBarSalary value={percentINSS} color=\"#e67e22\" />\n          <ProgressBarSalary value={percentIPRF} color=\"#c0392b\" />\n          <ProgressBarSalary value={percentNetSalary} color=\"#16a085\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}